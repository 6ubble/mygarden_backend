/**
 * –ü–æ—Ä–æ–≥–∏ –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
 */
const THRESHOLDS = {
    HEAT_WARNING: 30,        // –û—á–µ–Ω—å –∂–∞—Ä–∫–æ (–≤—ã—à–µ 30¬∞C)
    HEAT_EXTREME: 35,        // –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∞—è –∂–∞—Ä–∞ (–≤—ã—à–µ 35¬∞C)
    RAIN_THRESHOLD: 0.5,     // –î–æ–∂–¥—å (–æ—Å–∞–¥–∫–∏ –±–æ–ª–µ–µ 0.5–º–º)
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –±—É–¥–µ—Ç –ª–∏ –æ—á–µ–Ω—å –∂–∞—Ä–∫–æ –∑–∞–≤—Ç—Ä–∞
 * @param {array} forecasts - –ú–∞—Å—Å–∏–≤ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
 * @returns {object} - { isHeat, maxTemp, description }
 */
const checkHeatWarning = (forecasts) => {
    if (!forecasts || forecasts.length === 0) {
        return { isHeat: false, maxTemp: null, description: null };
    }

    // –ë–µ—Ä—ë–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∑–∞ –¥–µ–Ω—å
    const maxTemp = Math.max(...forecasts.map(f => f.main.temp));
    const hotestForecast = forecasts.find(f => f.main.temp === maxTemp);

    return {
        isHeat: maxTemp >= THRESHOLDS.HEAT_WARNING,
        isExtreme: maxTemp >= THRESHOLDS.HEAT_EXTREME,
        maxTemp: Math.round(maxTemp),
        humidity: hotestForecast?.main.humidity || null,
        description: hotestForecast?.weather[0].description || null
    };
};

/**
 * –ü—Ä–æ–≤–µ—Ä–∏—Ç—å, –±—É–¥–µ—Ç –ª–∏ –¥–æ–∂–¥—å –∑–∞–≤—Ç—Ä–∞
 * @param {array} forecasts - –ú–∞—Å—Å–∏–≤ –ø—Ä–æ–≥–Ω–æ–∑–æ–≤
 * @returns {object} - { isRain, totalRain, rainHours }
 */
const checkRainWarning = (forecasts) => {
    if (!forecasts || forecasts.length === 0) {
        return { isRain: false, totalRain: 0, rainHours: 0 };
    }

    let totalRain = 0;
    let rainHours = 0;

    forecasts.forEach(forecast => {
        // OpenWeatherMap –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç rain –≤ –º–º –∑–∞ 3 —á–∞—Å–∞
        if (forecast.rain) {
            const rainAmount = forecast.rain['3h'] || 0;
            if (rainAmount > 0) {
                totalRain += rainAmount;
                rainHours++;
            }
        }
    });

    return {
        isRain: totalRain >= THRESHOLDS.RAIN_THRESHOLD,
        totalRain: Math.round(totalRain * 10) / 10, // –û–∫—Ä—É–≥–ª—è–µ–º –¥–æ 1 –∑–Ω–∞–∫–∞
        rainHours,
        willRainAll: rainHours >= 6  // –î–æ–∂–¥—å –≤–µ—Å—å –¥–µ–Ω—å
    };
};

/**
 * –ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é –ø–æ –ø–æ–ª–∏–≤—É
 * @param {object} heat - –†–µ–∑—É–ª—å—Ç–∞—Ç checkHeatWarning
 * @param {object} rain - –†–µ–∑—É–ª—å—Ç–∞—Ç checkRainWarning
 * @returns {object} - { recommendation, shouldWater }
 */
const getWateringRecommendation = (heat, rain) => {
    if (rain.isRain) {
        return {
            recommendation: `üíß –î–æ–∂–¥–∏–∫ —Å–ø–∞—Å—ë—Ç! –ó–∞–≤—Ç—Ä–∞ –æ–∂–∏–¥–∞–µ—Ç—Å—è ${rain.totalRain}–º–º –æ—Å–∞–¥–∫–æ–≤. –ü–æ–ª–∏–≤–∞—Ç—å –Ω–µ –Ω—É–∂–Ω–æ!`,
            shouldWater: false,
            emoji: 'üåßÔ∏è'
        };
    }

    if (heat.isHeat) {
        const message = heat.isExtreme
            ? `üî• –≠–∫—Å—Ç—Ä–µ–º–∞–ª—å–Ω–∞—è –∂–∞—Ä–∞! –ó–∞–≤—Ç—Ä–∞ –¥–æ ${heat.maxTemp}¬∞C. –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–ª–µ–π—Ç–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –≤–µ—á–µ—Ä–æ–º!`
            : `‚òÄÔ∏è –û—á–µ–Ω—å –∂–∞—Ä–∫–æ! –ó–∞–≤—Ç—Ä–∞ –¥–æ ${heat.maxTemp}¬∞C. –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º –ø–æ–ª–∏—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏—è –≤–µ—á–µ—Ä–æ–º.`;
        
        return {
            recommendation: message,
            shouldWater: true,
            emoji: heat.isExtreme ? 'üî•' : '‚òÄÔ∏è'
        };
    }

    return {
        recommendation: null,
        shouldWater: false,
        emoji: null
    };
};

module.exports = {
    THRESHOLDS,
    checkHeatWarning,
    checkRainWarning,
    getWateringRecommendation
};